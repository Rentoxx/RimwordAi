import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [numNames, setNumNames] = useState(1)
  const [origin, setOrigin] = useState('')
  const [input, setInput] = useState('')
  const [names, setNames] = useState([])

  const submit = async () => {
    const res = await fetch('api/rimworld-colonists', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ numNames, origin, input }),
    })
    const data = await res.json()
    const result = JSON.parse(data.result)
    setNames(result)
    
  }

  return (
    <>
      <Head>
        <title>Rimword Ai</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='max-w-7xl mx-auto py-12'>
        <h2 className='text-2xl font-bold text-center pb-2'>Rimword Name Generator</h2>

        <div className='flex flex-col gap-4 justify-center w-1/3 mx-auto'>

          <div>
            <div className='py-4'>
              <label className='block mb-2 text-md font-medium text-gray-900'>
                1. Number of Colonists you need names for:
              </label>
              <input className='bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5'
                type="number"
                value={numNames}
                onChange={(event) => setNumNames(event.target.valueAsNumber)}
              />
            </div>

            <div>
              <label className='block mb-2 text-md font-medium text-gray-900'>
                2. Select the origin of your names e.g "German"
              </label>
              <select className='bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5' value={origin} onChange={(event) => setOrigin(event.target.value)}>
                <option value="global">Select an Origin</option>
                <option value="random">Random</option>
                <option value="medieval">Medieval</option>
                <option value="tribal">Tribal</option>
                <option value="japanese">Japanese</option>
                <option value="chinese">Chinese</option>
                <option value="german">German</option>
                <option value="french">French</option>
              </select>
            </div>
          </div>

          <label className='block mb-2 text-md font-medium text-gray-900'>
            3. Enter special wishes like 3 Woman 6 Men
          </label>

          <div className='relative'>
            <textarea 
              rows={3}
              value={input}
              onChange={(e) => setInput(e.target.value)}
              className='w-full border-2 border-gray-300 bg-white p-4 rounded-lg text-sm focus:outline-none resize-none'
              placeholder='Enter special wishes.'
            />
            
          </div>
          <button type='button' onClick={submit} className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'>
            Generate
          </button>

          <ul className='border-2 border-gray-300 text-gray-900 text-md rounded-lg block'>
            {names && names.length > 0 ? (
              names.map((person, index) => (
                <li key={person[0]} className="p-2">
                  {index + 1}. {person[0]} "{person[1]}" {person[2]}
                </li>
              ))
            ) : (
              <li>No names generated yet</li>
            )}
          </ul>



        </div>

      </div>

    </>
  )
}
